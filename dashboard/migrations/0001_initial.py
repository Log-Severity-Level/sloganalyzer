# Generated by Django 3.2.4 on 2023-03-25 21:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LogStatements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement_id', models.IntegerField(null=True, verbose_name='Statement ID')),
                ('system_id', models.IntegerField(null=True, verbose_name='System ID')),
                ('system_name', models.CharField(max_length=500, verbose_name='System')),
                ('branch_id', models.IntegerField(null=True, verbose_name='Branch ID')),
                ('branch_name', models.TextField(null=True, verbose_name='Branch')),
                ('release', models.TextField(null=True, verbose_name='Release')),
                ('version', models.IntegerField(null=True, verbose_name='Version L1')),
                ('version2', models.IntegerField(null=True, verbose_name='Version L2')),
                ('version3', models.IntegerField(null=True, verbose_name='Version L3')),
                ('version4', models.IntegerField(null=True, verbose_name='Version L4')),
                ('severity_level_id', models.IntegerField(null=True, verbose_name='Severity Level ID')),
                ('severity_level', models.CharField(max_length=500, verbose_name='Severity Level')),
                ('severity_level_severity', models.IntegerField(null=True, verbose_name='Severity')),
                ('filename_id', models.IntegerField(null=True, verbose_name='Filename ID')),
                ('filename', models.CharField(max_length=500, verbose_name='Filename')),
                ('method_id', models.IntegerField(null=True, verbose_name='Method ID')),
                ('method_name', models.TextField(null=True, verbose_name='Method')),
                ('message_id', models.IntegerField(null=True, verbose_name='Message ID')),
                ('message', models.TextField(null=True, verbose_name='Message')),
                ('count_variables', models.IntegerField(null=True, verbose_name='Variables Number')),
                ('have_variables', models.TextField(null=True, verbose_name='Have variables')),
                ('have_message', models.TextField(null=True, verbose_name='Have message')),
                ('have_words_in_message', models.TextField(null=True, verbose_name='Have words in message')),
                ('is_in_test', models.TextField(null=True, verbose_name='Is in test')),
                ('message_length', models.IntegerField(null=True, verbose_name='Message Length')),
                ('catch_blocks_statements_number', models.IntegerField(null=True, verbose_name='Catch blocks statements number')),
                ('is_in_catch_blocks_statements', models.TextField(null=True, verbose_name='Is in catch blocks statements')),
                ('conditional_statements_number', models.IntegerField(null=True, verbose_name='Conditional statements number')),
                ('is_in_conditional_statements', models.TextField(null=True, verbose_name='Is in conditional statements')),
                ('is_in_break_statement', models.TextField(null=True, verbose_name='Is in break statement')),
                ('is_in_continue_statement', models.TextField(null=True, verbose_name='Is in continue statement')),
                ('message_without_variables', models.TextField(null=True, verbose_name='Message without variables')),
                ('looping_statements_number', models.IntegerField(null=True, verbose_name='Looping statements number')),
                ('is_in_looping_statements', models.TextField(null=True, verbose_name='Is in looping statements')),
                ('uses_string_concatenation', models.TextField(null=True, verbose_name='Uses string concatenation')),
                ('message_words_count', models.IntegerField(null=True, verbose_name='Message words count')),
                ('method_cyclomatic_complexity', models.IntegerField(null=True, verbose_name='Method cyclomatic complexity')),
                ('method_nloc', models.IntegerField(null=True, verbose_name='Method nloc')),
                ('method_token_count', models.IntegerField(null=True, verbose_name='Method token count')),
                ('method_long_name', models.TextField(null=True, verbose_name='Method long name')),
                ('method_top_nesting_level', models.IntegerField(null=True, verbose_name='Method top nesting level')),
                ('method_parameters_count', models.IntegerField(null=True, verbose_name='Method parameters count')),
                ('method_fan_in', models.IntegerField(null=True, verbose_name='Method fan in')),
                ('method_fan_out', models.IntegerField(null=True, verbose_name='Method fan out')),
                ('method_general_fan_out', models.IntegerField(null=True, verbose_name='Method general fan out')),
                ('line_count', models.IntegerField(null=True, verbose_name='Line count')),
                ('line_initial', models.IntegerField(null=True, verbose_name='Line initial')),
                ('line_final', models.IntegerField(null=True, verbose_name='Line final')),
                ('duplicated', models.TextField(null=True, verbose_name='Duplicated')),
                ('log_lines', models.TextField(null=True, verbose_name='Log lines')),
            ],
        ),
        migrations.CreateModel(
            name='LogStatementsChanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(max_length=500, verbose_name='System')),
                ('branch_1_id', models.IntegerField(null=True, verbose_name='Branch 1 id')),
                ('branch_2_id', models.IntegerField(null=True, verbose_name='Branch 2 id')),
                ('branch_name_1', models.TextField(null=True, verbose_name='Branch 1')),
                ('branch_name_2', models.TextField(null=True, verbose_name='Branch 2')),
                ('file_id', models.IntegerField(null=True, verbose_name='File id')),
                ('filename', models.CharField(max_length=500, verbose_name='Filename')),
                ('severity_level_1', models.CharField(max_length=500, verbose_name='Severity level 1')),
                ('severity_level_2', models.CharField(max_length=500, verbose_name='Severity level 2')),
                ('severity_level_severity_1', models.IntegerField(null=True, verbose_name='Severity level severity 1')),
                ('severity_level_severity_2', models.IntegerField(null=True, verbose_name='Severity level severity 2')),
                ('statement_1_id', models.IntegerField(null=True, verbose_name='Statement 1 id')),
                ('statement_2_id', models.IntegerField(null=True, verbose_name='Statement 2 id')),
                ('release_1', models.TextField(null=True, verbose_name='Release 1')),
                ('release_2', models.TextField(null=True, verbose_name='Release 2')),
                ('releases', models.TextField(null=True, verbose_name='Releases')),
                ('version_1', models.IntegerField(null=True, verbose_name='Version 1')),
                ('version_2', models.IntegerField(null=True, verbose_name='Version 2')),
                ('version2_1', models.IntegerField(null=True, verbose_name='Version2 1')),
                ('version2_2', models.IntegerField(null=True, verbose_name='Version2 2')),
                ('version3_1', models.IntegerField(null=True, verbose_name='Version3 1')),
                ('version3_2', models.IntegerField(null=True, verbose_name='Version3 2')),
                ('version4_1', models.IntegerField(null=True, verbose_name='Version4 1')),
                ('version4_2', models.IntegerField(null=True, verbose_name='Version4 2')),
                ('message_words_count_1', models.IntegerField(null=True, verbose_name='Message words count 1')),
                ('message_words_count_2', models.IntegerField(null=True, verbose_name='Message words count 2')),
                ('count_variables_1', models.IntegerField(null=True, verbose_name='Count variables 1')),
                ('count_variables_2', models.IntegerField(null=True, verbose_name='Count variables 2')),
                ('changed_semantic_content', models.TextField(null=True, verbose_name='Changed semantic content')),
                ('changed_semantic_content_type', models.TextField(null=True, verbose_name='Changed semantic content type')),
                ('changed_severity_level', models.TextField(null=True, verbose_name='Changed severity level')),
                ('changed_severity_level_type', models.TextField(null=True, verbose_name='Changed severity level type')),
                ('changed_messages_length', models.TextField(null=True, verbose_name='Changed messages length')),
                ('changed_messages_length_type', models.TextField(null=True, verbose_name='Changed messages length type')),
                ('changed_variables', models.TextField(null=True, verbose_name='Changed variables')),
                ('changed_variables_type', models.TextField(null=True, verbose_name='Changed variables type')),
                ('quant_lines_1', models.IntegerField(null=True, verbose_name='Quant lines 1')),
                ('quant_lines_2', models.IntegerField(null=True, verbose_name='Quant lines 2')),
                ('changed_quant_lines', models.TextField(null=True, verbose_name='Changed quant lines')),
                ('is_in_catch_blocks_statements_1', models.TextField(null=True, verbose_name='Is in catch blocks statements 1')),
                ('is_in_catch_blocks_statements_2', models.TextField(null=True, verbose_name='Is in catch blocks statements 2')),
                ('is_in_conditional_statements_1', models.TextField(null=True, verbose_name='Is in conditional statements 1')),
                ('is_in_conditional_statements_2', models.TextField(null=True, verbose_name='Is in conditional statements 2')),
                ('is_in_break_statement_1', models.TextField(null=True, verbose_name='Is in break statement 1')),
                ('is_in_break_statement_2', models.TextField(null=True, verbose_name='Is in break statement 2')),
                ('is_in_continue_statement_1', models.TextField(null=True, verbose_name='Is in continue statement 1')),
                ('is_in_continue_statement_2', models.TextField(null=True, verbose_name='Is in continue_statement 2')),
                ('is_in_looping_statements_1', models.TextField(null=True, verbose_name='Is in looping statements 1')),
                ('is_in_looping_statements_2', models.TextField(null=True, verbose_name='Is in looping statements 2')),
                ('uses_string_concatenation_1', models.TextField(null=True, verbose_name='Uses string concatenation 1')),
                ('uses_string_concatenation_2', models.TextField(null=True, verbose_name='Uses string concatenation 2')),
                ('catch_blocks_statements_number_1', models.IntegerField(null=True, verbose_name='Catch blocks statements number_1')),
                ('catch_blocks_statements_number_2', models.IntegerField(null=True, verbose_name='Catch blocks statements number_2')),
                ('uses_string_concatenation_changed', models.TextField(null=True, verbose_name='Uses string concatenation changed')),
                ('conditional_statements_number_1', models.IntegerField(null=True, verbose_name='Conditional statements number 1')),
                ('conditional_statements_number_2', models.IntegerField(null=True, verbose_name='Conditional statements number 2')),
                ('conditional_statements_number_changed', models.TextField(null=True, verbose_name='Conditional statements number changed')),
                ('looping_statements_number_1', models.IntegerField(null=True, verbose_name='Looping statements number 1')),
                ('looping_statements_number_2', models.IntegerField(null=True, verbose_name='Looping statements number 2')),
                ('looping_statements_number_changed', models.TextField(null=True, verbose_name='Looping statements number changed')),
                ('method_parameters_count_1', models.IntegerField(null=True, verbose_name='Method parameters count 1')),
                ('method_parameters_count_2', models.IntegerField(null=True, verbose_name='Method parameters count 2')),
                ('method_parameters_count_changed', models.TextField(null=True, verbose_name='Method parameters count changed')),
                ('method_cyclomatic_complexity_1', models.IntegerField(null=True, verbose_name='Method cyclomatic complexity 1')),
                ('method_cyclomatic_complexity_2', models.IntegerField(null=True, verbose_name='Method cyclomatic complexity 2')),
                ('method_cyclomatic_complexity_changed', models.TextField(null=True, verbose_name='Method cyclomatic complexity changed')),
                ('method_nloc_1', models.IntegerField(null=True, verbose_name='Method nloc 1')),
                ('method_nloc_2', models.IntegerField(null=True, verbose_name='Method nloc 2')),
                ('method_nloc_changed', models.TextField(null=True, verbose_name='Method nloc changed')),
                ('message_1_duplicated', models.TextField(null=True, verbose_name='Message 1 duplicated')),
                ('message_2_duplicated', models.TextField(null=True, verbose_name='Message 2 duplicated')),
                ('message_duplicated', models.TextField(null=True, verbose_name='Message duplicated')),
                ('message_1_blank', models.TextField(null=True, verbose_name='Message 1 blank')),
                ('message_2_blank', models.TextField(null=True, verbose_name='Message 2 blank')),
                ('message_blank', models.TextField(null=True, verbose_name='Message blank')),
                ('file_exists_in_both_branches', models.TextField(null=True, verbose_name='File exists in both branches')),
                ('category', models.TextField(null=True, verbose_name='Category')),
                ('severity_level_1_id', models.IntegerField(null=True, verbose_name='Severity level 1 id')),
                ('severity_level_2_id', models.IntegerField(null=True, verbose_name='Severity level 2 id')),
                ('message_1_id', models.IntegerField(null=True, verbose_name='Message 1 id')),
                ('message_2_id', models.IntegerField(null=True, verbose_name='Message 2 id')),
                ('message_1', models.TextField(null=True, verbose_name='Message 1')),
                ('message_2', models.TextField(null=True, verbose_name='Message 2')),
                ('statement_1', models.TextField(null=True, verbose_name='Statement 1')),
                ('statement_2', models.TextField(null=True, verbose_name='Statement 2')),
                ('message_without_variables_1', models.TextField(null=True, verbose_name='Message without variables 1')),
                ('message_without_variables_2', models.TextField(null=True, verbose_name='Message without variables 2')),
                ('line_number_initial_1', models.IntegerField(null=True, verbose_name='Line number initial 1')),
                ('line_number_initial_2', models.IntegerField(null=True, verbose_name='Line number initial 2')),
                ('cosine_similarity_statements', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cosine of similarity between log statements')),
                ('cosine_similarity_messages', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cosine of similarity between messages')),
                ('cosine_similarity_variables', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cosine of similarity between variables')),
            ],
        ),
    ]
